{"version":3,"sources":["../../../src/components/accessibility/screen_reader.test.js"],"names":["describe","test","$paragraph","expect","toMatchSnapshot"],"mappings":";;AAAA;;;;AACA;;AAEA;;;;AAEAA,SAAS,qBAAT,EAAgC,YAAM;AACpCA,WAAS,gDAAT,EAA2D,YAAM;AAC/DC,SAAK,yBAAL,EAAgC,YAAM;AACpC,UAAMC,aAAa,oBACjB;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,OADiB,CAAnB;;AASAC,aAAOD,UAAP,EACGE,eADH;AAED,KAZD;AAaAH,SAAK,sEAAL,EAA6E,YAAM;AACjF,UAAMC,aAAa,oBACjB;AAAA;AAAA;AACE;AAAA;AAAA,YAAG,WAAU,SAAb;AAAA;AAAA;AADF,OADiB,CAAnB;;AASAC,aAAOD,UAAP,EACGE,eADH;AAED,KAZD;AAaD,GA3BD;AA4BD,CA7BD","file":"screen_reader.test.js","sourcesContent":["import React from 'react';\nimport { render } from 'enzyme';\n\nimport { KuiScreenReaderOnly } from './screen_reader';\n\ndescribe('KuiScreenReaderOnly', () => {\n  describe('adds an accessibility class to a child element', () => {\n    test('when used with no props', () => {\n      const $paragraph = render(\n        <KuiScreenReaderOnly>\n          <p>\n            This paragraph is not visibile to sighted users but will be read by\n            screenreaders.\n          </p>\n        </KuiScreenReaderOnly>\n      );\n\n      expect($paragraph)\n        .toMatchSnapshot();\n    });\n    test('and combines other classNames (foo, bar) given as props on the child', () => {\n      const $paragraph = render(\n        <KuiScreenReaderOnly>\n          <p className=\"foo bar\">\n            This paragraph is not visibile to sighted users but will be read by\n            screenreaders.\n          </p>\n        </KuiScreenReaderOnly>\n      );\n\n      expect($paragraph)\n        .toMatchSnapshot();\n    });\n  });\n});\n"]}