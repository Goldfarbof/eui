{"version":3,"sources":["../../../src/components/popover/popover.js"],"names":["anchorPositionToClassNameMap","ANCHOR_POSITIONS","Object","keys","KuiPopover","props","onKeyDown","e","keyCode","ESCAPE","closePopover","closingTransitionTimeout","undefined","state","isClosing","isOpening","nextProps","isOpen","clearTimeout","window","requestAnimationFrame","setState","setTimeout","anchorPosition","button","withTitle","children","className","panelClassName","panelPaddingSize","rest","classes","panelClasses","panel","clickOutsideDeactivates","fallbackFocus","node","propTypes","bool","func","isRequired","oneOf","string","defaultProps"],"mappings":"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","file":"popover.js","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FocusTrap from 'focus-trap-react';\n\nimport { cascadingMenuKeyCodes } from '../../services';\n\nimport { KuiOutsideClickDetector } from '../outside_click_detector';\n\nimport { KuiPanel, SIZES } from '../panel/panel';\n\nconst anchorPositionToClassNameMap = {\n  'upCenter': 'kuiPopover--anchorUpCenter',\n  'upLeft': 'kuiPopover--anchorUpLeft',\n  'upRight': 'kuiPopover--anchorUpRight',\n  'downCenter': 'kuiPopover--anchorDownCenter',\n  'downLeft': 'kuiPopover--anchorDownLeft',\n  'downRight': 'kuiPopover--anchorDownRight',\n  'leftCenter': 'kuiPopover--anchorLeftCenter',\n  'leftUp': 'kuiPopover--anchorLeftUp',\n  'leftDown': 'kuiPopover--anchorLeftDown',\n  'rightCenter': 'kuiPopover--anchorRightCenter',\n  'rightUp': 'kuiPopover--anchorRightUp',\n  'rightDown': 'kuiPopover--anchorRightDown',\n};\n\nexport const ANCHOR_POSITIONS = Object.keys(anchorPositionToClassNameMap);\n\nexport class KuiPopover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closingTransitionTimeout = undefined;\n\n    this.state = {\n      isClosing: false,\n      isOpening: false,\n    };\n  }\n\n  onKeyDown = e => {\n    if (e.keyCode === cascadingMenuKeyCodes.ESCAPE) {\n      this.props.closePopover();\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // The popover is being opened.\n    if (!this.props.isOpen && nextProps.isOpen) {\n      clearTimeout(this.closingTransitionTimeout);\n      // We need to set this state a beat after the render takes place, so that the CSS\n      // transition can take effect.\n      window.requestAnimationFrame(() => {\n        this.setState({\n          isOpening: true,\n        });\n      });\n    }\n\n    // The popover is being closed.\n    if (this.props.isOpen && !nextProps.isOpen) {\n      // If the user has just closed the popover, queue up the removal of the content after the\n      // transition is complete.\n      this.setState({\n        isClosing: true,\n        isOpening: false,\n      });\n\n      this.closingTransitionTimeout = setTimeout(() => {\n        this.setState({\n          isClosing: false,\n        });\n      }, 250);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.closingTransitionTimeout);\n  }\n\n  render() {\n    const {\n      anchorPosition,\n      button,\n      isOpen,\n      withTitle,\n      children,\n      className,\n      closePopover,\n      panelClassName,\n      panelPaddingSize,\n      ...rest,\n    } = this.props;\n\n    const classes = classNames(\n      'kuiPopover',\n      anchorPositionToClassNameMap[anchorPosition],\n      className,\n      {\n        'kuiPopover-isOpen': this.state.isOpening,\n        'kuiPopover--withTitle': withTitle,\n      },\n    );\n\n    const panelClasses = classNames('kuiPopover__panel', panelClassName);\n\n    let panel;\n\n    if (isOpen || this.state.isClosing) {\n      panel = (\n        <FocusTrap\n          focusTrapOptions={{\n            clickOutsideDeactivates: true,\n            fallbackFocus: () => this.panel,\n          }}\n        >\n          <KuiPanel\n            panelRef={node => { this.panel = node; }}\n            className={panelClasses}\n            paddingSize={panelPaddingSize}\n            hasShadow\n          >\n            {children}\n          </KuiPanel>\n        </FocusTrap>\n      );\n    }\n\n    return (\n      <KuiOutsideClickDetector onOutsideClick={closePopover}>\n        <div\n          className={classes}\n          onKeyDown={this.onKeyDown}\n          {...rest}\n        >\n          {button}\n          {panel}\n        </div>\n      </KuiOutsideClickDetector>\n    );\n  }\n}\n\nKuiPopover.propTypes = {\n  isOpen: PropTypes.bool,\n  withTitle: PropTypes.bool,\n  closePopover: PropTypes.func.isRequired,\n  button: PropTypes.node.isRequired,\n  children: PropTypes.node,\n  anchorPosition: PropTypes.oneOf(ANCHOR_POSITIONS),\n  panelClassName: PropTypes.string,\n  panelPaddingSize: PropTypes.oneOf(SIZES),\n};\n\nKuiPopover.defaultProps = {\n  isOpen: false,\n  anchorPosition: 'downCenter',\n  panelPaddingSize: 'm',\n};\n"]}