{"version":3,"sources":["../../../src/components/popover/popover.test.js"],"names":["describe","test","component","expect","toMatchSnapshot"],"mappings":";;;;AAAA;;;;AACA;;AACA;;AAEA;;;;AAEAA,SAAS,YAAT,EAAuB,YAAM;AAC3BC,OAAK,aAAL,EAAoB,YAAM;AACxB,QAAMC,YAAY,oBAChB;AACE,cAAQ,6CADV;AAEE,oBAAc,wBAAM,CAAE;AAFxB,sCADgB,CAAlB;;AAQAC,WAAOD,SAAP,EACGE,eADH;AAED,GAXD;;AAaAH,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMC,YAAY,oBAChB;AAAA;AAAA;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE;AAFxB;AAAA;AAAA,KADgB,CAAlB;;AASAC,WAAOD,SAAP,EACGE,eADH;AAED,GAZD;;AAcAJ,WAAS,gBAAT,EAA2B,YAAM;AAC/BC,SAAK,oBAAL,EAA2B,YAAM;AAC/B,UAAMC,YAAY,oBAChB;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE;AAFxB,QADgB,CAAlB;;AAOAC,aAAOD,SAAP,EACGE,eADH;AAED,KAVD;;AAYAH,SAAK,kBAAL,EAAyB,YAAM;AAC7B,UAAMC,YAAY,oBAChB;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE,CAFxB;AAGE,wBAAe;AAHjB,QADgB,CAAlB;;AAQAC,aAAOD,SAAP,EACGE,eADH;AAED,KAXD;;AAaAH,SAAK,mBAAL,EAA0B,YAAM;AAC9B,UAAMC,YAAY,oBAChB;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE,CAFxB;AAGE,wBAAe;AAHjB,QADgB,CAAlB;;AAQAC,aAAOD,SAAP,EACGE,eADH;AAED,KAXD;AAYD,GAtCD;;AAwCAJ,WAAS,QAAT,EAAmB,YAAM;AACvBC,SAAK,mBAAL,EAA0B,YAAM;AAC9B,UAAMC,YAAY,oBAChB;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE;AAFxB,QADgB,CAAlB;;AAOAC,aAAOD,SAAP,EACGE,eADH;AAED,KAVD;;AAYAH,SAAK,cAAL,EAAqB,YAAM;AACzB,UAAMC,YAAY,oBAChB;AACE,gBAAQ,6CADV;AAEE,sBAAc,wBAAM,CAAE,CAFxB;AAGE,gBAAQ;AAHV,QADgB,CAAlB;;AAQAC,aAAOD,SAAP,EACGE,eADH;AAED,KAXD;AAYD,GAzBD;AA0BD,CA9FD","file":"popover.test.js","sourcesContent":["import React from 'react';\nimport { render } from 'enzyme';\nimport { requiredProps } from '../../test/required_props';\n\nimport { KuiPopover } from './popover';\n\ndescribe('KuiPopover', () => {\n  test('is rendered', () => {\n    const component = render(\n      <KuiPopover\n        button={<button />}\n        closePopover={() => {}}\n        {...requiredProps}\n      />\n    );\n\n    expect(component)\n      .toMatchSnapshot();\n  });\n\n  test('children is rendered', () => {\n    const component = render(\n      <KuiPopover\n        button={<button />}\n        closePopover={() => {}}\n      >\n        Children\n      </KuiPopover>\n    );\n\n    expect(component)\n      .toMatchSnapshot();\n  });\n\n  describe('anchorPosition', () => {\n    test('defaults to center', () => {\n      const component = render(\n        <KuiPopover\n          button={<button />}\n          closePopover={() => {}}\n        />\n      );\n\n      expect(component)\n        .toMatchSnapshot();\n    });\n\n    test('left is rendered', () => {\n      const component = render(\n        <KuiPopover\n          button={<button />}\n          closePopover={() => {}}\n          anchorPosition=\"left\"\n        />\n      );\n\n      expect(component)\n        .toMatchSnapshot();\n    });\n\n    test('right is rendered', () => {\n      const component = render(\n        <KuiPopover\n          button={<button />}\n          closePopover={() => {}}\n          anchorPosition=\"downRight\"\n        />\n      );\n\n      expect(component)\n        .toMatchSnapshot();\n    });\n  });\n\n  describe('isOpen', () => {\n    test('defaults to false', () => {\n      const component = render(\n        <KuiPopover\n          button={<button />}\n          closePopover={() => {}}\n        />\n      );\n\n      expect(component)\n        .toMatchSnapshot();\n    });\n\n    test('renders true', () => {\n      const component = render(\n        <KuiPopover\n          button={<button />}\n          closePopover={() => {}}\n          isOpen={true}\n        />\n      );\n\n      expect(component)\n        .toMatchSnapshot();\n    });\n  });\n});\n"]}