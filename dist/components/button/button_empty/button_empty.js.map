{"version":3,"sources":["../../../../src/components/button/button_empty/button_empty.js"],"names":["typeToClassNameMap","primary","danger","disabled","text","ghost","TYPES","Object","keys","sizeToClassNameMap","small","large","SIZES","iconSideToClassNameMap","left","right","ICON_SIDES","flushTypeToClassNameMap","FLUSH_TYPES","KuiButtonEmpty","children","className","iconType","iconSide","type","size","flush","isDisabled","rest","classes","buttonIcon","propTypes","node","string","oneOf","bool","defaultProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAKA,IAAMA,qBAAqB;AACzBC,WAAS,yBADgB;AAEzBC,UAAQ,wBAFiB;AAGzBC,YAAU,0BAHe;AAIzBC,QAAM,sBAJmB;AAKzBC,SAAO;AALkB,CAA3B;;AAQO,IAAMC,wBAAQC,OAAOC,IAAP,CAAYR,kBAAZ,CAAd;;AAEP,IAAMS,qBAAqB;AACzBC,SAAO,uBADkB;AAEzBC,SAAO;AAFkB,CAA3B;;AAKO,IAAMC,wBAAQL,OAAOC,IAAP,CAAYC,kBAAZ,CAAd;;AAEP,IAAMI,yBAAyB;AAC7BC,QAAM,EADuB;AAE7BC,SAAO;AAFsB,CAA/B;;AAKO,IAAMC,kCAAaT,OAAOC,IAAP,CAAYK,sBAAZ,CAAnB;;AAEP,IAAMI,0BAA0B;AAC9B,UAAQ,2BADsB;AAE9B,WAAS;AAFqB,CAAhC;;AAKO,IAAMC,oCAAcX,OAAOC,IAAP,CAAYS,uBAAZ,CAApB;;AAEA,IAAME,iBAAiB,SAAjBA,cAAiB,OAUxB;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADDC,IACC;;AAEJ,MAAMC,UAAU,0BACd,gBADc,EAEd7B,mBAAmBwB,IAAnB,CAFc,EAGdf,mBAAmBgB,IAAnB,CAHc,EAIdZ,uBAAuBU,QAAvB,CAJc,EAKdN,wBAAwBS,KAAxB,CALc,EAMdL,SANc,CAAhB;;AASA;AACA,MAAIS,mBAAJ;;AAEA,MAAIR,QAAJ,EAAc;AACZQ,iBACE;AACE,iBAAU,sBADZ;AAEE,YAAMR,QAFR;AAGE,YAAK,QAHP;AAIE,qBAAY;AAJd,MADF;AAQD;;AAED,SACE;AAAA;AAAA;AACE,gBAAUK,UADZ;AAEE,iBAAWE;AAFb,OAGMD,IAHN;AAKE;AAAA;AAAA,QAAM,WAAU,yBAAhB;AACGE,gBADH;AAEE;AAAA;AAAA;AAAOV;AAAP;AAFF;AALF,GADF;AAYD,CA/CM;;;AAiDPD,eAAeY,SAAf,GAA2B;AACzBX,YAAU,oBAAUY,IADK;AAEzBX,aAAW,oBAAUY,MAFI;AAGzBX,YAAU,oBAAUY,KAAV,kBAHe;AAIzBX,YAAU,oBAAUW,KAAV,CAAgBlB,UAAhB,CAJe;AAKzBQ,QAAM,oBAAUU,KAAV,CAAgB5B,KAAhB,CALmB;AAMzBmB,QAAM,oBAAUS,KAAV,CAAgBtB,KAAhB,CANmB;AAOzBc,SAAO,oBAAUQ,KAAV,CAAgBhB,WAAhB,CAPkB;AAQzBS,cAAY,oBAAUQ;AARG,CAA3B;;AAWAhB,eAAeiB,YAAf,GAA8B;AAC5Bb,YAAU,MADkB;AAE5BC,QAAM;AAFsB,CAA9B","file":"button_empty.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  ICON_TYPES,\n  KuiIcon,\n} from '../../icon';\n\nconst typeToClassNameMap = {\n  primary: 'kuiButtonEmpty--primary',\n  danger: 'kuiButtonEmpty--danger',\n  disabled: 'kuiButtonEmpty--disabled',\n  text: 'kuiButtonEmpty--text',\n  ghost: 'kuiButtonEmpty--ghost',\n};\n\nexport const TYPES = Object.keys(typeToClassNameMap);\n\nconst sizeToClassNameMap = {\n  small: 'kuiButtonEmpty--small',\n  large: 'kuiButtonEmpty--large',\n};\n\nexport const SIZES = Object.keys(sizeToClassNameMap);\n\nconst iconSideToClassNameMap = {\n  left: '',\n  right: 'kuiButtonEmpty--iconRight',\n};\n\nexport const ICON_SIDES = Object.keys(iconSideToClassNameMap);\n\nconst flushTypeToClassNameMap = {\n  'left': 'kuiButtonEmpty--flushLeft',\n  'right': 'kuiButtonEmpty--flushRight',\n};\n\nexport const FLUSH_TYPES = Object.keys(flushTypeToClassNameMap);\n\nexport const KuiButtonEmpty = ({\n  children,\n  className,\n  iconType,\n  iconSide,\n  type,\n  size,\n  flush,\n  isDisabled,\n  ...rest,\n}) => {\n\n  const classes = classNames(\n    'kuiButtonEmpty',\n    typeToClassNameMap[type],\n    sizeToClassNameMap[size],\n    iconSideToClassNameMap[iconSide],\n    flushTypeToClassNameMap[flush],\n    className,\n  );\n\n  // Add an icon to the button if one exists.\n  let buttonIcon;\n\n  if (iconType) {\n    buttonIcon = (\n      <KuiIcon\n        className=\"kuiButtonEmpty__icon\"\n        type={iconType}\n        size=\"medium\"\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  return (\n    <button\n      disabled={isDisabled}\n      className={classes}\n      {...rest}\n    >\n      <span className=\"kuiButtonEmpty__content\">\n        {buttonIcon}\n        <span>{children}</span>\n      </span>\n    </button>\n  );\n};\n\nKuiButtonEmpty.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  iconType: PropTypes.oneOf(ICON_TYPES),\n  iconSide: PropTypes.oneOf(ICON_SIDES),\n  type: PropTypes.oneOf(TYPES),\n  size: PropTypes.oneOf(SIZES),\n  flush: PropTypes.oneOf(FLUSH_TYPES),\n  isDisabled: PropTypes.bool,\n};\n\nKuiButtonEmpty.defaultProps = {\n  iconSide: 'left',\n  type: 'primary',\n};\n"]}