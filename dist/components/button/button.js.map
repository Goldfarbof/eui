{"version":3,"sources":["../../../src/components/button/button.js"],"names":["typeToClassNameMap","primary","secondary","warning","danger","ghost","TYPES","Object","keys","sizeToClassNameMap","small","large","SIZES","iconSideToClassNameMap","left","right","ICON_SIDES","KuiButton","children","className","iconType","iconSide","type","size","fill","isDisabled","rest","classes","buttonIcon","propTypes","node","string","oneOf","bool","defaultProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAKA,IAAMA,qBAAqB;AACzBC,WAAS,oBADgB;AAEzBC,aAAW,sBAFc;AAGzBC,WAAS,oBAHgB;AAIzBC,UAAQ,mBAJiB;AAKzBC,SAAO;AALkB,CAA3B;;AAQO,IAAMC,wBAAQC,OAAOC,IAAP,CAAYR,kBAAZ,CAAd;;AAEP,IAAMS,qBAAqB;AACzBC,SAAO,kBADkB;AAEzBC,SAAO;AAFkB,CAA3B;;AAKO,IAAMC,wBAAQL,OAAOC,IAAP,CAAYC,kBAAZ,CAAd;;AAEP,IAAMI,yBAAyB;AAC7BC,QAAM,EADuB;AAE7BC,SAAO;AAFsB,CAA/B;;AAKO,IAAMC,kCAAaT,OAAOC,IAAP,CAAYK,sBAAZ,CAAnB;;AAEA,IAAMI,YAAY,SAAZA,SAAY,OAUnB;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADDC,IACC;;AAEJ,MAAMC,UAAU,0BACd,WADc,EAEd3B,mBAAmBsB,IAAnB,CAFc,EAGdb,mBAAmBc,IAAnB,CAHc,EAIdV,uBAAuBQ,QAAvB,CAJc,EAKdF,SALc,EAMd;AACE,uBAAmBK;AADrB,GANc,CAAhB;;AAWA;AACA,MAAII,mBAAJ;;AAEA,MAAIR,QAAJ,EAAc;AACZQ,iBACE;AACE,iBAAU,iBADZ;AAEE,YAAMR,QAFR;AAGE,YAAK,QAHP;AAIE,qBAAY;AAJd,MADF;AAQD;;AAED,SACE;AAAA;AAAA;AACE,gBAAUK,UADZ;AAEE,iBAAWE;AAFb,OAGMD,IAHN;AAKE;AAAA;AAAA,QAAM,WAAU,oBAAhB;AACGE,gBADH;AAEE;AAAA;AAAA;AAAOV;AAAP;AAFF;AALF,GADF;AAYD,CAjDM;;;AAmDPD,UAAUY,SAAV,GAAsB;AACpBX,YAAU,oBAAUY,IADA;AAEpBX,aAAW,oBAAUY,MAFD;AAGpBX,YAAU,oBAAUY,KAAV,kBAHU;AAIpBX,YAAU,oBAAUW,KAAV,CAAgBhB,UAAhB,CAJU;AAKpBQ,QAAM,oBAAUS,IALI;AAMpBX,QAAM,oBAAUU,KAAV,CAAgB1B,KAAhB,CANc;AAOpBiB,QAAM,oBAAUS,KAAV,CAAgBpB,KAAhB,CAPc;AAQpBa,cAAY,oBAAUQ;AARF,CAAtB;;AAWAhB,UAAUiB,YAAV,GAAyB;AACvBb,YAAU,MADa;AAEvBC,QAAM,SAFiB;AAGvBE,QAAM;AAHiB,CAAzB","file":"button.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport {\n  ICON_TYPES,\n  KuiIcon,\n} from '../icon';\n\nconst typeToClassNameMap = {\n  primary: 'kuiButton--primary',\n  secondary: 'kuiButton--secondary',\n  warning: 'kuiButton--warning',\n  danger: 'kuiButton--danger',\n  ghost: 'kuiButton--ghost',\n};\n\nexport const TYPES = Object.keys(typeToClassNameMap);\n\nconst sizeToClassNameMap = {\n  small: 'kuiButton--small',\n  large: 'kuiButton--large',\n};\n\nexport const SIZES = Object.keys(sizeToClassNameMap);\n\nconst iconSideToClassNameMap = {\n  left: '',\n  right: 'kuiButton--iconRight',\n};\n\nexport const ICON_SIDES = Object.keys(iconSideToClassNameMap);\n\nexport const KuiButton = ({\n  children,\n  className,\n  iconType,\n  iconSide,\n  type,\n  size,\n  fill,\n  isDisabled,\n  ...rest,\n}) => {\n\n  const classes = classNames(\n    'kuiButton',\n    typeToClassNameMap[type],\n    sizeToClassNameMap[size],\n    iconSideToClassNameMap[iconSide],\n    className,\n    {\n      'kuiButton--fill': fill,\n    },\n  );\n\n  // Add an icon to the button if one exists.\n  let buttonIcon;\n\n  if (iconType) {\n    buttonIcon = (\n      <KuiIcon\n        className=\"kuiButton__icon\"\n        type={iconType}\n        size=\"medium\"\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  return (\n    <button\n      disabled={isDisabled}\n      className={classes}\n      {...rest}\n    >\n      <span className=\"kuiButton__content\">\n        {buttonIcon}\n        <span>{children}</span>\n      </span>\n    </button>\n  );\n};\n\nKuiButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  iconType: PropTypes.oneOf(ICON_TYPES),\n  iconSide: PropTypes.oneOf(ICON_SIDES),\n  fill: PropTypes.bool,\n  type: PropTypes.oneOf(TYPES),\n  size: PropTypes.oneOf(SIZES),\n  isDisabled: PropTypes.bool,\n};\n\nKuiButton.defaultProps = {\n  iconSide: 'left',\n  type: 'primary',\n  fill: false,\n};\n"]}