{"version":3,"sources":["../../../../src/components/button/button_icon/button_icon.js"],"names":["typeToClassNameMap","primary","danger","disabled","ghost","TYPES","Object","keys","KuiButtonIcon","className","iconType","type","isDisabled","rest","classes","buttonIcon","propTypes","children","node","string","oneOf","bool","defaultProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAKA,IAAMA,qBAAqB;AACzBC,WAAS,wBADgB;AAEzBC,UAAQ,uBAFiB;AAGzBC,YAAU,yBAHe;AAIzBC,SAAO;AAJkB,CAA3B;;AAOO,IAAMC,wBAAQC,OAAOC,IAAP,CAAYP,kBAAZ,CAAd;;AAGA,IAAMQ,gBAAgB,SAAhBA,aAAgB,OAMvB;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADDC,IACC;;AAEJ,MAAMC,UAAU,0BACd,eADc,EAEdd,mBAAmBW,IAAnB,CAFc,EAGdF,SAHc,CAAhB;;AAMA;AACA,MAAIM,mBAAJ;;AAEA,MAAIL,QAAJ,EAAc;AACZK,iBACE;AACE,iBAAU,qBADZ;AAEE,YAAML,QAFR;AAGE,YAAK,QAHP;AAIE,qBAAY;AAJd,MADF;AAQD;;AAED,SACE;AAAA;AAAA;AACE,gBAAUE,UADZ;AAEE,iBAAWE;AAFb,OAGMD,IAHN;AAKGE;AALH,GADF;AASD,CArCM;;;AAuCPP,cAAcQ,SAAd,GAA0B;AACxBC,YAAU,oBAAUC,IADI;AAExBT,aAAW,oBAAUU,MAFG;AAGxBT,YAAU,oBAAUU,KAAV,kBAHc;AAIxBT,QAAM,oBAAUS,KAAV,CAAgBf,KAAhB,CAJkB;AAKxBO,cAAY,oBAAUS;AALE,CAA1B;;AAQAb,cAAcc,YAAd,GAA6B;AAC3BX,QAAM;AADqB,CAA7B","file":"button_icon.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  ICON_TYPES,\n  KuiIcon,\n} from '../../icon';\n\nconst typeToClassNameMap = {\n  primary: 'kuiButtonIcon--primary',\n  danger: 'kuiButtonIcon--danger',\n  disabled: 'kuiButtonIcon--disabled',\n  ghost: 'kuiButtonIcon--ghost',\n};\n\nexport const TYPES = Object.keys(typeToClassNameMap);\n\n\nexport const KuiButtonIcon = ({\n  className,\n  iconType,\n  type,\n  isDisabled,\n  ...rest,\n}) => {\n\n  const classes = classNames(\n    'kuiButtonIcon',\n    typeToClassNameMap[type],\n    className,\n  );\n\n  // Add an icon to the button if one exists.\n  let buttonIcon;\n\n  if (iconType) {\n    buttonIcon = (\n      <KuiIcon\n        className=\"kuiButtonIcon__icon\"\n        type={iconType}\n        size=\"medium\"\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  return (\n    <button\n      disabled={isDisabled}\n      className={classes}\n      {...rest}\n    >\n      {buttonIcon}\n    </button>\n  );\n};\n\nKuiButtonIcon.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  iconType: PropTypes.oneOf(ICON_TYPES),\n  type: PropTypes.oneOf(TYPES),\n  isDisabled: PropTypes.bool,\n};\n\nKuiButtonIcon.defaultProps = {\n  type: 'primary',\n};\n"]}