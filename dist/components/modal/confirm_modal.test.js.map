{"version":3,"sources":["../../../src/components/modal/confirm_modal.test.js"],"names":["onConfirm","onCancel","beforeEach","spy","test","component","expect","toMatchSnapshot","find","simulate","assert","calledOnce","notCalled","describe","keyCode","ESCAPE","button","getDOMNode","document","activeElement","toEqual","firstChild"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;AAEA;;AACA;;AAEA;;;;AAIA,IAAIA,kBAAJ;AACA,IAAIC,iBAAJ;;AAEAC,WAAW,YAAM;AACfF,cAAY,gBAAMG,GAAN,EAAZ;AACAF,aAAW,gBAAME,GAAN,EAAX;AACD,CAHD;;AAKAC,KAAK,yBAAL,EAAgC,YAAM;AACpC,MAAMC,YAAY,oBAChB;AAAA;AAAA;AACE,aAAM,sBADR;AAEE,gBAAU,oBAAM,CAAE,CAFpB;AAGE,iBAAWL,SAHb;AAIE,wBAAiB,oBAJnB;AAKE,yBAAkB;AALpB;AAAA;AAAA,GADgB,CAAlB;AAYAM,SAAOD,SAAP,EAAkBE,eAAlB;AACD,CAdD;;AAgBAH,KAAK,WAAL,EAAkB,YAAM;AACtB,MAAMC,YAAY,mBAAM;AACtB,cAAUJ,QADY;AAEtB,eAAWD;AAFW,IAAN,CAAlB;AAIAK,YAAUG,IAAV,CAAe,8CAAf,EAA+DC,QAA/D,CAAwE,OAAxE;AACA,kBAAMC,MAAN,CAAaC,UAAb,CAAwBX,SAAxB;AACA,kBAAMU,MAAN,CAAaE,SAAb,CAAuBX,QAAvB;AACD,CARD;;AAUAY,SAAS,UAAT,EAAqB,YAAM;AACzBT,OAAK,mBAAL,EAA0B,YAAM;AAC9B,QAAMC,YAAY,mBAAM;AACtB,gBAAUJ,QADY;AAEtB,iBAAWD;AAFW,MAAN,CAAlB;AAIAK,cAAUG,IAAV,CAAe,6CAAf,EAA8DC,QAA9D,CAAuE,OAAvE;AACA,oBAAMC,MAAN,CAAaE,SAAb,CAAuBZ,SAAvB;AACA,oBAAMU,MAAN,CAAaC,UAAb,CAAwBV,QAAxB;AACD,GARD;;AAUAG,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMC,YAAY,mBAAM;AACtB,gBAAUJ,QADY;AAEtB,iBAAWD,SAFW;AAGtB,wBAAe;AAHO,MAAN,CAAlB;AAKAK,cAAUG,IAAV,CAAe,0BAAf,EAA2CC,QAA3C,CAAoD,SAApD,EAA+D,EAAEK,SAAS,mBAASC,MAApB,EAA/D;AACA,oBAAML,MAAN,CAAaE,SAAb,CAAuBZ,SAAvB;AACA,oBAAMU,MAAN,CAAaC,UAAb,CAAwBV,QAAxB;AACD,GATD;AAUD,CArBD;;AAuBAY,SAAS,sBAAT,EAAiC,YAAM;AACrCT,OAAK,WAAL,EAAkB,YAAM;AACtB,QAAMC,YAAY,mBAAM;AACtB,gBAAUJ,QADY;AAEtB;AAFsB,MAAN,CAAlB;AAIA,QAAMe,SAASX,UAAUG,IAAV,CAAe,6CAAf,EAA8DS,UAA9D,EAAf;AACAX,WAAOY,SAASC,aAAhB,EAA+BC,OAA/B,CAAuCJ,MAAvC;AACD,GAPD;;AASAZ,OAAK,YAAL,EAAmB,YAAM;AACvB,QAAMC,YAAY,mBAAM;AACtB,gBAAUJ,QADY;AAEtB;AAFsB,MAAN,CAAlB;AAIA,QAAMe,SAASX,UAAUG,IAAV,CAAe,8CAAf,EAA+DS,UAA/D,EAAf;AACAX,WAAOY,SAASC,aAAhB,EAA+BC,OAA/B,CAAuCJ,MAAvC;AACD,GAPD;;AASAZ,OAAK,yCAAL,EAAgD,YAAM;AACpD,QAAMC,YAAY,mBAAM;AACtB,gBAAUJ;AADY,MAAN,CAAlB;AAGAK,WAAOY,SAASC,aAAhB,EAA+BC,OAA/B,CAAuCf,UAAUY,UAAV,GAAuBI,UAA9D;AACD,GALD;AAMD,CAzBD","file":"confirm_modal.test.js","sourcesContent":["import React from 'react';\nimport sinon from 'sinon';\nimport { mount, render } from 'enzyme';\n\nimport { requiredProps } from '../../test/required_props';\nimport { keyCodes } from '../../services';\n\nimport {\n  CANCEL_BUTTON, CONFIRM_BUTTON, KuiConfirmModal,\n} from './confirm_modal';\n\nlet onConfirm;\nlet onCancel;\n\nbeforeEach(() => {\n  onConfirm = sinon.spy();\n  onCancel = sinon.spy();\n});\n\ntest('renders KuiConfirmModal', () => {\n  const component = render(\n    <KuiConfirmModal\n      title=\"A confirmation modal\"\n      onCancel={() => {}}\n      onConfirm={onConfirm}\n      cancelButtonText=\"Cancel Button Text\"\n      confirmButtonText=\"Confirm Button Text\"\n      {...requiredProps}\n    >\n      This is a confirmation modal example\n    </KuiConfirmModal>\n  );\n  expect(component).toMatchSnapshot();\n});\n\ntest('onConfirm', () => {\n  const component = mount(<KuiConfirmModal\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n  />);\n  component.find('[data-test-subj=\"confirmModalConfirmButton\"]').simulate('click');\n  sinon.assert.calledOnce(onConfirm);\n  sinon.assert.notCalled(onCancel);\n});\n\ndescribe('onCancel', () => {\n  test('triggerd by click', () => {\n    const component = mount(<KuiConfirmModal\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n    />);\n    component.find('[data-test-subj=\"confirmModalCancelButton\"]').simulate('click');\n    sinon.assert.notCalled(onConfirm);\n    sinon.assert.calledOnce(onCancel);\n  });\n\n  test('triggered by esc key', () => {\n    const component = mount(<KuiConfirmModal\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      data-test-subj=\"modal\"\n    />);\n    component.find('[data-test-subj=\"modal\"]').simulate('keydown', { keyCode: keyCodes.ESCAPE });\n    sinon.assert.notCalled(onConfirm);\n    sinon.assert.calledOnce(onCancel);\n  });\n});\n\ndescribe('defaultFocusedButton', () => {\n  test('is cancel', () => {\n    const component = mount(<KuiConfirmModal\n      onCancel={onCancel}\n      defaultFocusedButton={CANCEL_BUTTON}\n    />);\n    const button = component.find('[data-test-subj=\"confirmModalCancelButton\"]').getDOMNode();\n    expect(document.activeElement).toEqual(button);\n  });\n\n  test('is confirm', () => {\n    const component = mount(<KuiConfirmModal\n      onCancel={onCancel}\n      defaultFocusedButton={CONFIRM_BUTTON}\n    />);\n    const button = component.find('[data-test-subj=\"confirmModalConfirmButton\"]').getDOMNode();\n    expect(document.activeElement).toEqual(button);\n  });\n\n  test('when not given gives focus to the modal', () => {\n    const component = mount(<KuiConfirmModal\n      onCancel={onCancel}\n    />);\n    expect(document.activeElement).toEqual(component.getDOMNode().firstChild);\n  });\n});\n"]}