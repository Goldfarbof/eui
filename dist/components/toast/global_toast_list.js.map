{"version":3,"sources":["../../../src/components/toast/global_toast_list.js"],"names":["KuiGlobalToastList","props","isScrollingToBottom","isScrolledToBottom","onScroll","bind","onMouseEnter","onMouseLeave","scrollToBottom","position","listElement","scrollTop","destination","scrollHeight","clientHeight","distanceToDestination","window","requestAnimationFrame","isUserInteracting","addEventListener","prevProps","children","length","startScrollingToBottom","removeEventListener","className","rest","classes","element","propTypes","node","string"],"mappings":"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","file":"global_toast_list.js","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class KuiGlobalToastList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isScrollingToBottom = false;\n    this.isScrolledToBottom = true;\n    this.onScroll = this.onScroll.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  startScrollingToBottom() {\n    this.isScrollingToBottom = true;\n\n    const scrollToBottom = () => {\n      const position = this.listElement.scrollTop;\n      const destination = this.listElement.scrollHeight - this.listElement.clientHeight;\n      const distanceToDestination = destination - position;\n\n      if (distanceToDestination < 5) {\n        this.listElement.scrollTop = destination;\n        this.isScrollingToBottom = false;\n        this.isScrolledToBottom = true;\n        return;\n      }\n\n      this.listElement.scrollTop = position + distanceToDestination * 0.25;\n\n      if (this.isScrollingToBottom) {\n        window.requestAnimationFrame(scrollToBottom);\n      }\n    };\n\n    window.requestAnimationFrame(scrollToBottom);\n  }\n\n  onMouseEnter() {\n    // Stop scrolling to bottom if we're in mid-scroll, because the user wants to interact with\n    // the list.\n    this.isScrollingToBottom = false;\n    this.isUserInteracting = true;\n  }\n\n  onMouseLeave() {\n    this.isUserInteracting = false;\n  }\n\n  onScroll() {\n    this.isScrolledToBottom =\n      this.listElement.scrollHeight - this.listElement.scrollTop === this.listElement.clientHeight;\n  }\n\n  componentDidMount() {\n    this.listElement.addEventListener('scroll', this.onScroll);\n    this.listElement.addEventListener('mouseenter', this.onMouseEnter);\n    this.listElement.addEventListener('mouseleave', this.onMouseLeave);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.isUserInteracting) {\n      // If the user has scrolled up the toast list then we don't want to annoy them by scrolling\n      // all the way back to the bottom.\n      if (this.isScrolledToBottom) {\n        if (prevProps.children.length < this.props.children.length) {\n          this.startScrollingToBottom();\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.listElement.removeEventListener('scroll', this.onScroll);\n    this.listElement.removeEventListener('mouseenter', this.onMouseEnter);\n    this.listElement.removeEventListener('mouseleave', this.onMouseLeave);\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      ...rest,\n    } = this.props;\n\n    const classes = classNames('kuiGlobalToastList', className);\n\n    return (\n      <div\n        ref={element => { this.listElement = element; }}\n        className={classes}\n        {...rest}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nKuiGlobalToastList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n"]}