{"version":3,"sources":["../../../src/components/toast/global_toast_list_item.js"],"names":["KuiGlobalToastListItem","isDismissed","children","classes","props","className","Object","assign","propTypes","bool","node"],"mappings":";;;;;;;AAAA;;AAGA;;;;AACA;;;;;;AAEO,IAAMA,0DAAyB,SAAzBA,sBAAyB,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACnE,MAAMC,UAAU,0BAAW,wBAAX,EAAqCD,SAASE,KAAT,CAAeC,SAApD,EAA+D;AAC7E,0CAAsCJ;AADuC,GAA/D,CAAhB;;AAIA,SAAO,yBAAaC,QAAb,EAAuBI,OAAOC,MAAP,CAAc,EAAd,EAAkBL,SAASE,KAA3B,EAAkC;AAC9DC,eAAWF;AADmD,GAAlC,CAAvB,CAAP;AAGD,CARM;;AAUPH,uBAAuBQ,SAAvB,GAAmC;AACjCP,eAAa,oBAAUQ,IADU;AAEjCP,YAAU,oBAAUQ;AAFa,CAAnC","file":"global_toast_list_item.js","sourcesContent":["import {\n  cloneElement,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const KuiGlobalToastListItem = ({ isDismissed, children }) => {\n  const classes = classNames('kuiGlobalToastListItem', children.props.className, {\n    'kuiGlobalToastListItem-isDismissed': isDismissed,\n  });\n\n  return cloneElement(children, Object.assign({}, children.props, {\n    className: classes,\n  }));\n};\n\nKuiGlobalToastListItem.propTypes = {\n  isDismissed: PropTypes.bool,\n  children: PropTypes.node,\n};\n"]}