{"version":3,"sources":["../../../src/components/toast/toast.js"],"names":["typeToClassNameMap","info","success","warning","danger","TYPES","Object","keys","KuiToast","title","type","iconType","onClose","children","className","rest","classes","headerClasses","headerIcon","closeButton","optionalBody","propTypes","node","oneOf","func"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AAKA;;;;;;AAIA,IAAMA,qBAAqB;AACzBC,QAAM,gBADmB;AAEzBC,WAAS,mBAFgB;AAGzBC,WAAS,mBAHgB;AAIzBC,UAAQ;AAJiB,CAA3B;;AAOO,IAAMC,wBAAQC,OAAOC,IAAP,CAAYP,kBAAZ,CAAd;;AAEA,IAAMQ,WAAW,SAAXA,QAAW,OAAsE;AAAA,MAAnEC,KAAmE,QAAnEA,KAAmE;AAAA,MAA5DC,IAA4D,QAA5DA,IAA4D;AAAA,MAAtDC,QAAsD,QAAtDA,QAAsD;AAAA,MAA5CC,OAA4C,QAA5CA,OAA4C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,IAAW;;AAC5F,MAAMC,UAAU,0BAAW,UAAX,EAAuBhB,mBAAmBU,IAAnB,CAAvB,EAAiDI,SAAjD,CAAhB;AACA,MAAMG,gBAAgB,0BAAW,gBAAX,EAA6B;AACjD,gCAA4BJ;AADqB,GAA7B,CAAtB;;AAIA,MAAIK,mBAAJ;;AAEA,MAAIP,QAAJ,EAAc;AACZO,iBACE;AACE,iBAAU,sBADZ;AAEE,YAAMP,QAFR;AAGE,YAAK,QAHP;AAIE,qBAAY;AAJd,MADF;AAQD;;AAED,MAAIQ,oBAAJ;;AAEA,MAAIP,OAAJ,EAAa;AACXO,kBACE;AAAA;AAAA;AACE,mBAAU,uBADZ;AAEE,sBAAW,eAFb;AAGE,iBAASP;AAHX;AAKE;AACE,cAAK,OADP;AAEE,cAAK,QAFP;AAGE,uBAAY;AAHd;AALF,KADF;AAaD;;AAED,MAAIQ,qBAAJ;;AAEA,MAAIP,QAAJ,EAAc;AACZO,mBACE;AAAA;AAAA,QAAS,MAAK,GAAd;AACGP;AADH,KADF;AAKD;;AAED,SACE;AAAA;AAAA;AACE,iBAAWG;AADb,OAEMD,IAFN;AAIE;AAAA;AAAA,QAAK,WAAWE,aAAhB;AACGC,gBADH;AAGE;AAAA;AAAA,UAAM,WAAU,uBAAhB;AACGT;AADH;AAHF,KAJF;AAYGU,eAZH;AAaGC;AAbH,GADF;AAiBD,CAhEM;;;AAkEPZ,SAASa,SAAT,GAAqB;AACnBZ,SAAO,oBAAUa,IADE;AAEnBX,YAAU,oBAAUY,KAAV,kBAFS;AAGnBb,QAAM,oBAAUa,KAAV,CAAgBlB,KAAhB,CAHa;AAInBO,WAAS,oBAAUY;AAJA,CAArB","file":"toast.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  ICON_TYPES,\n  KuiIcon,\n} from '../icon';\n\nimport {\n  KuiText,\n} from '..';\n\nconst typeToClassNameMap = {\n  info: 'kuiToast--info',\n  success: 'kuiToast--success',\n  warning: 'kuiToast--warning',\n  danger: 'kuiToast--danger',\n};\n\nexport const TYPES = Object.keys(typeToClassNameMap);\n\nexport const KuiToast = ({ title, type, iconType, onClose, children, className, ...rest }) => {\n  const classes = classNames('kuiToast', typeToClassNameMap[type], className);\n  const headerClasses = classNames('kuiToastHeader', {\n    'kuiToastHeader--withBody': children,\n  });\n\n  let headerIcon;\n\n  if (iconType) {\n    headerIcon = (\n      <KuiIcon\n        className=\"kuiToastHeader__icon\"\n        type={iconType}\n        size=\"medium\"\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  let closeButton;\n\n  if (onClose) {\n    closeButton = (\n      <button\n        className=\"kuiToast__closeButton\"\n        aria-label=\"Dismiss toast\"\n        onClick={onClose}\n      >\n        <KuiIcon\n          type=\"cross\"\n          size=\"medium\"\n          aria-hidden=\"true\"\n        />\n      </button>\n    );\n  }\n\n  let optionalBody;\n\n  if (children) {\n    optionalBody = (\n      <KuiText size=\"s\">\n        {children}\n      </KuiText>\n    );\n  }\n\n  return (\n    <div\n      className={classes}\n      {...rest}\n    >\n      <div className={headerClasses}>\n        {headerIcon}\n\n        <span className=\"kuiToastHeader__title\">\n          {title}\n        </span>\n      </div>\n\n      {closeButton}\n      {optionalBody}\n    </div>\n  );\n};\n\nKuiToast.propTypes = {\n  title: PropTypes.node,\n  iconType: PropTypes.oneOf(ICON_TYPES),\n  type: PropTypes.oneOf(TYPES),\n  onClose: PropTypes.func,\n};\n"]}