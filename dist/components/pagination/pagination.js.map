{"version":3,"sources":["../../../src/components/pagination/pagination.js"],"names":["MAX_VISIBLE_PAGES","NUMBER_SURROUNDING_PAGES","Math","floor","KuiPagination","className","pageCount","activePage","onPageClick","rest","classes","pages","firstPageInRange","max","min","lastPageInRange","i","index","push","bind","previousButton","firstPageButtons","lastPageButtons","nextButton","propTypes","string","pagesCount","number","func","pageLinkProvider"],"mappings":"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","file":"pagination.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { KuiPaginationButton } from './pagination_button';\n\nconst MAX_VISIBLE_PAGES = 5;\nconst NUMBER_SURROUNDING_PAGES = Math.floor(MAX_VISIBLE_PAGES * 0.5);\n\nexport const KuiPagination = ({\n  className,\n  pageCount,\n  activePage,\n  onPageClick,\n  ...rest,\n}) => {\n  const classes = classNames('kuiPagination', className);\n\n  const pages = [];\n  const firstPageInRange = Math.max(0, Math.min(activePage - NUMBER_SURROUNDING_PAGES, pageCount - MAX_VISIBLE_PAGES));\n  const lastPageInRange = Math.min(pageCount, firstPageInRange + MAX_VISIBLE_PAGES);\n\n  for (let i = firstPageInRange, index = 0; i < lastPageInRange; i++, index++) {\n    pages.push(\n      <KuiPaginationButton\n        isActive={i === activePage}\n        key={index}\n        onClick={onPageClick.bind(null, i)}\n        hideOnMobile\n      >\n        {i + 1}\n      </KuiPaginationButton>\n    );\n  }\n\n  let previousButton;\n\n  if (activePage !== 0) {\n    previousButton = (\n      <KuiPaginationButton\n        onClick={onPageClick.bind(null, activePage - 1)}\n        iconType=\"arrowLeft\"\n      >\n        Previous\n      </KuiPaginationButton>\n    );\n  }\n\n  const firstPageButtons = [];\n\n  if (firstPageInRange > 0) {\n    firstPageButtons.push(\n      <KuiPaginationButton\n        key=\"0\"\n        onClick={onPageClick.bind(null, 0)}\n        hideOnMobile\n      >\n        1\n      </KuiPaginationButton>\n    );\n\n    if (firstPageInRange > 1) {\n      firstPageButtons.push(\n        <KuiPaginationButton\n          key=\"beginningEllipsis\"\n          isPlaceholder\n          hideOnMobile\n        />\n      );\n    }\n  }\n\n  const lastPageButtons = [];\n\n  if (lastPageInRange < pageCount) {\n    if (lastPageInRange < pageCount - 1) {\n      lastPageButtons.push(\n        <KuiPaginationButton\n          key=\"endingEllipsis\"\n          isPlaceholder\n          hideOnMobile\n        />\n      );\n    }\n\n    lastPageButtons.push(\n      <KuiPaginationButton\n        key={pageCount - 1}\n        onClick={onPageClick.bind(null, pageCount - 1)}\n        hideOnMobile\n      >\n        {pageCount}\n      </KuiPaginationButton>\n    );\n  }\n\n  let nextButton;\n\n  if (activePage !== pageCount - 1) {\n    nextButton = (\n      <KuiPaginationButton\n        onClick={onPageClick.bind(null, activePage + 1)}\n        iconType=\"arrowRight\"\n        iconSide=\"right\"\n      >\n        Next\n      </KuiPaginationButton>\n    );\n  }\n\n  return (\n    <div\n      className={classes}\n      {...rest}\n    >\n      {previousButton}\n      {firstPageButtons}\n      {pages}\n      {lastPageButtons}\n      {nextButton}\n    </div>\n  );\n};\n\nKuiPagination.propTypes = {\n  className: PropTypes.string,\n  pagesCount: PropTypes.number,\n  activePage: PropTypes.number,\n  onPageClick: PropTypes.func,\n  pageLinkProvider: PropTypes.func,\n};\n"]}