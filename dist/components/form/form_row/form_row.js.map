{"version":3,"sources":["../../../../src/components/form/form_row/form_row.js"],"names":["KuiFormRow","props","state","isFocused","onFocus","bind","onBlur","setState","children","helpText","isInvalid","error","label","id","hasEmptyLabelSpace","fullWidth","className","rest","classes","optionalHelpText","optionalErrors","errorTexts","Array","isArray","map","optionalLabel","field","propTypes","node","isRequired","string","bool","oneOfType","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AAIA;;;;AACA;;;;AAEA;;AACA;;AACA;;;;;;;;;;;;IAEaA,U,WAAAA,U;;;AACX,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,iBAAW;AADA,KAAb;;AAIA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;AARiB;AASlB;;;;8BAES;AACR,WAAKE,QAAL,CAAc;AACZJ,mBAAW;AADC,OAAd;AAGD;;;6BAEQ;AACP,WAAKI,QAAL,CAAc;AACZJ,mBAAW;AADC,OAAd;AAGD;;;6BAEQ;AAAA,mBAYH,KAAKF,KAZF;AAAA,UAELO,QAFK,UAELA,QAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLC,EAPK,UAOLA,EAPK;AAAA,UAQLC,kBARK,UAQLA,kBARK;AAAA,UASLC,SATK,UASLA,SATK;AAAA,UAULC,SAVK,UAULA,SAVK;AAAA,UAWFC,IAXE;;AAcP,UAAMC,UAAU,0BACd,YADc,EAEd;AACE,0CAAkCJ,kBADpC;AAEE,iCAAyBC;AAF3B,OAFc,EAMdC,SANc,CAAhB;;AASA,UAAIG,yBAAJ;;AAEA,UAAIV,QAAJ,EAAc;AACZU,2BACE;AAAA;AAAA,YAAiB,WAAU,kBAA3B;AACGV;AADH,SADF;AAKD;;AAED,UAAIW,uBAAJ;;AAEA,UAAIT,KAAJ,EAAW;AACT,YAAMU,aAAaC,MAAMC,OAAN,CAAcZ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAlD;AACAS,yBAAiBC,WAAWG,GAAX,CAAe;AAAA,iBAC9B;AAAA;AAAA,cAAkB,KAAKb,KAAvB,EAA8B,WAAU,kBAAxC;AACGA;AADH,WAD8B;AAAA,SAAf,CAAjB;AAKD;;AAED,UAAIc,sBAAJ;;AAEA,UAAIb,KAAJ,EAAW;AACTa,wBACE;AAAA;AAAA;AACE,uBAAW,KAAKvB,KAAL,CAAWC,SADxB;AAEE,uBAAWO,SAFb;AAGE,qBAASG;AAHX;AAKGD;AALH,SADF;AASD;;AAED,UAAMc,QAAQ,yBAAalB,QAAb,EAAuB;AACnCK,cADmC;AAEnCT,iBAAS,KAAKA,OAFqB;AAGnCE,gBAAQ,KAAKA;AAHsB,OAAvB,CAAd;;AAMA,aACE;AAAA;AAAA;AACE,qBAAWY;AADb,WAEMD,IAFN;AAIGQ,qBAJH;AAKGC,aALH;AAMGN,sBANH;AAOGD;AAPH,OADF;AAWD;;;;;;AAGHnB,WAAW2B,SAAX,GAAuB;AACrBnB,YAAU,oBAAUoB,IAAV,CAAeC,UADJ;AAErBb,aAAW,oBAAUc,MAFA;AAGrBlB,SAAO,oBAAUkB,MAHI;AAIrBjB,MAAI,oBAAUiB,MAJO;AAKrBpB,aAAW,oBAAUqB,IALA;AAMrBpB,SAAO,oBAAUqB,SAAV,CAAoB,CAAC,oBAAUF,MAAX,EAAmB,oBAAUG,OAAV,CAAkB,oBAAUH,MAA5B,CAAnB,CAApB,CANc;AAOrBrB,YAAU,oBAAUmB,IAPC;AAQrBd,sBAAoB,oBAAUiB,IART;AASrBhB,aAAW,oBAAUgB;AATA,CAAvB;;AAYA/B,WAAWkC,YAAX,GAA0B;AACxBpB,sBAAoB,KADI;AAExBC,aAAW;AAFa,CAA1B","file":"form_row.js","sourcesContent":["import React, {\n  cloneElement,\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { KuiFormHelpText } from '../form_help_text';\nimport { KuiFormErrorText } from '../form_error_text';\nimport { KuiFormLabel } from '../form_label';\n\nexport class KuiFormRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n    };\n\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onFocus() {\n    this.setState({\n      isFocused: true,\n    });\n  }\n\n  onBlur() {\n    this.setState({\n      isFocused: false,\n    });\n  }\n\n  render() {\n    const {\n      children,\n      helpText,\n      isInvalid,\n      error,\n      label,\n      id,\n      hasEmptyLabelSpace,\n      fullWidth,\n      className,\n      ...rest,\n    } = this.props;\n\n    const classes = classNames(\n      'kuiFormRow',\n      {\n        'kuiFormRow--hasEmptyLabelSpace': hasEmptyLabelSpace,\n        'kuiFormRow--fullWidth': fullWidth,\n      },\n      className\n    );\n\n    let optionalHelpText;\n\n    if (helpText) {\n      optionalHelpText = (\n        <KuiFormHelpText className=\"kuiFormRow__text\">\n          {helpText}\n        </KuiFormHelpText>\n      );\n    }\n\n    let optionalErrors;\n\n    if (error) {\n      const errorTexts = Array.isArray(error) ? error : [error];\n      optionalErrors = errorTexts.map(error => (\n        <KuiFormErrorText key={error} className=\"kuiFormRow__text\">\n          {error}\n        </KuiFormErrorText>\n      ));\n    }\n\n    let optionalLabel;\n\n    if (label) {\n      optionalLabel = (\n        <KuiFormLabel\n          isFocused={this.state.isFocused}\n          isInvalid={isInvalid}\n          htmlFor={id}\n        >\n          {label}\n        </KuiFormLabel>\n      );\n    }\n\n    const field = cloneElement(children, {\n      id,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n    });\n\n    return (\n      <div\n        className={classes}\n        {...rest}\n      >\n        {optionalLabel}\n        {field}\n        {optionalErrors}\n        {optionalHelpText}\n      </div>\n    );\n  }\n}\n\nKuiFormRow.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  helpText: PropTypes.node,\n  hasEmptyLabelSpace: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nKuiFormRow.defaultProps = {\n  hasEmptyLabelSpace: false,\n  fullWidth: false,\n};\n"]}