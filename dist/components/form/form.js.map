{"version":3,"sources":["../../../src/components/form/form.js"],"names":["KuiForm","children","className","isInvalid","error","rest","classes","optionalErrors","errorTexts","Array","isArray","map","optionalErrorAlert","propTypes","bool","oneOfType","string","arrayOf"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,UAAU,SAAVA,OAAU,OAMjB;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,UAAU,0BAAW,SAAX,EAAsBJ,SAAtB,CAAhB;;AAEA,MAAIK,uBAAJ;;AAEA,MAAIH,KAAJ,EAAW;AACT,QAAMI,aAAaC,MAAMC,OAAN,CAAcN,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAlD;AACAG,qBACE;AAAA;AAAA;AACGC,iBAAWG,GAAX,CAAe;AAAA,eACd;AAAA;AAAA,YAAI,WAAU,gBAAd,EAA+B,KAAKP,KAApC;AACGA;AADH,SADc;AAAA,OAAf;AADH,KADF;AASD;;AAED,MAAIQ,2BAAJ;;AAEA,MAAIT,SAAJ,EAAe;AACbS,yBACE;AAAA;AAAA;AACE,mBAAU,iBADZ;AAEE,eAAM,yCAFR;AAGE,cAAK;AAHP;AAKGL;AALH,KADF;AASD;;AAED,SACE;AAAA;AAAA;AACE,iBAAWD;AADb,OAEMD,IAFN;AAIGO,sBAJH;AAKGX;AALH,GADF;AASD,CA/CM;;;AAiDPD,QAAQa,SAAR,GAAoB;AAClBV,aAAW,oBAAUW,IADH;AAElBV,SAAO,oBAAUW,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,OAAV,CAAkB,oBAAUD,MAA5B,CAAnB,CAApB;AAFW,CAApB","file":"form.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { KuiCallOut } from '..';\n\nexport const KuiForm = ({\n  children,\n  className,\n  isInvalid,\n  error,\n  ...rest,\n}) => {\n  const classes = classNames('kuiForm', className);\n\n  let optionalErrors;\n\n  if (error) {\n    const errorTexts = Array.isArray(error) ? error : [error];\n    optionalErrors = (\n      <ul>\n        {errorTexts.map(error => (\n          <li className=\"kuiForm__error\" key={error}>\n            {error}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  let optionalErrorAlert;\n\n  if (isInvalid) {\n    optionalErrorAlert = (\n      <KuiCallOut\n        className=\"kuiForm__errors\"\n        title=\"Please address the errors in your form.\"\n        type=\"danger\"\n      >\n        {optionalErrors}\n      </KuiCallOut>\n    );\n  }\n\n  return (\n    <div\n      className={classes}\n      {...rest}\n    >\n      {optionalErrorAlert}\n      {children}\n    </div>\n  );\n};\n\nKuiForm.propTypes = {\n  isInvalid: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n};\n"]}